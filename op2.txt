('ST', [['STATEMENT_ST']])
('STATEMENT_ST', [['STATEMENT', 'ST']])
("T'", [['*', 'F', "T'"], ['/', 'F', "T'"]])
('PROG', [['STATEMENT']])
('EXPRESSION', [['E']])
('STATEMENT', [['FOR_LOOP_ST'], ['IF_COND_ST'], ['ASSIGN_ST'], ['DECL_ST']])
('IF_COND_ST', [['IF_COND', 'ST']])
('F', [['G', '^', 'F'], ['G']])
('COND', [['EXPRESSION', 'relational_operator', 'EXPRESSION', ';']])
('FOR_LOOP', [['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}']])
('DECL_ST', [['DECL', 'ST'], ['DECL']])
('OP_ELSE', [['else', '{', 'S', '}']])
('ASSIGN', [['identifier', '=', 'EXPRESSION', ';']])
("E'", [['+', 'T', "E'"], ['-', 'T', "E'"]])
('IF_COND', [['if', '(', 'COND', ')', '{', 'S', '}', 'OP_ELSE'], ['if', '(', 'COND', ')', '{', 'S', '}']])
('ASSIGN_ST', [['ASSIGN', 'ST']])
('FOR_LOOP_ST', [['FOR_LOOP', 'ST']])
('T', [['F', "T'"], ['F']])
('E', [['T', "E'"], ['T']])
('DECL', [['type', 'identifier', ';']])
('G', [['(', 'E', ')'], ['identifier'], ['number']])


[('for', 'keyword'), ('(', 'punctuation'), ('i', 'identifier'), ('=', 'assignment_operator'), ('0', 'number'), (';', 'punctuation'), ('i', 'identifier'), ('<', 'relational_operator'), ('10', 'number'), (';', 'punctuation'), ('i', 'identifier'), ('++', 'arithmetic_operator'), (')', 'punctuation'), ('{', 'punctuation'), ('printf', 'identifier'), ('(', 'punctuation'), ('"Hello World\\n"', 'string_literal'), (')', 'punctuation'), (';', 'punctuation'), ('}', 'punctuation')]




in match rule with  PROG : [['STATEMENT']]
in rule  ['STATEMENT']  with  for
in symbol STATEMENT 		(in rule  ['STATEMENT'] )
matched True
in producer
in match rule with  STATEMENT : [['FOR_LOOP_ST'], ['IF_COND_ST'], ['ASSIGN_ST'], ['DECL_ST']]
in rule  ['FOR_LOOP_ST']  with  for
in symbol FOR_LOOP_ST 		(in rule  ['FOR_LOOP_ST'] )
matched True
in producer
in match rule with  FOR_LOOP_ST : [['FOR_LOOP', 'ST']]
in rule  ['FOR_LOOP', 'ST']  with  for
in symbol FOR_LOOP 		(in rule  ['FOR_LOOP', 'ST'] )
matched True
in producer
in match rule with  FOR_LOOP : [['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}']]
in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}']  with  for
in symbol for 		(in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}'] )
matched True
else for for
in symbol ( 		(in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}'] )
matched True
else ( (
in symbol ASSIGN 		(in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}'] )
matched True
in producer
in match rule with  ASSIGN : [['identifier', '=', 'EXPRESSION', ';']]
in rule  ['identifier', '=', 'EXPRESSION', ';']  with  i
in symbol identifier 		(in rule  ['identifier', '=', 'EXPRESSION', ';'] )
matched True
is token
in match token i identifier identifier
SYMBOL IN RULE identifier ['identifier', '=', 'EXPRESSION', ';'] ; False
temp store = =
matched True
in symbol = 		(in rule  ['identifier', '=', 'EXPRESSION', ';'] )
matched True
else = =
in symbol EXPRESSION 		(in rule  ['identifier', '=', 'EXPRESSION', ';'] )
matched True
in producer
in match rule with  EXPRESSION : [['E']]
in rule  ['E']  with  0
in symbol E 		(in rule  ['E'] )
matched True
in producer
in match rule with  E : [['T', "E'"], ['T']]
in rule  ['T', "E'"]  with  0
in symbol T 		(in rule  ['T', "E'"] )
matched True
in producer
in match rule with  T : [['F', "T'"], ['F']]
in rule  ['F', "T'"]  with  0
in symbol F 		(in rule  ['F', "T'"] )
matched True
in producer
in match rule with  F : [['G', '^', 'F'], ['G']]
in rule  ['G', '^', 'F']  with  0
in symbol G 		(in rule  ['G', '^', 'F'] )
matched True
in producer
in match rule with  G : [['(', 'E', ')'], ['identifier'], ['number']]
in rule  ['(', 'E', ')']  with  0
in symbol ( 		(in rule  ['(', 'E', ')'] )
matched True
else 0 (
3. unmatched ( 0
in symbol E 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in symbol ) 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in rule  ['identifier']  with  0
in symbol identifier 		(in rule  ['identifier'] )
matched True
is token
in match token 0 number identifier
2. unmatched identifier 0
in rule  ['number']  with  0
in symbol number 		(in rule  ['number'] )
matched True
is token
in match token 0 number number
SYMBOL IN RULE number ['number'] number True
temp store 0 ;
matched True
1. unmatched G ; ; ['G', '^', 'F']
in symbol ^ 		(in rule  ['G', '^', 'F'] )
unmatched exiting False
in symbol F 		(in rule  ['G', '^', 'F'] )
unmatched exiting False
in rule  ['G']  with  0
in symbol G 		(in rule  ['G'] )
matched True
in producer
in match rule with  G : [['(', 'E', ')'], ['identifier'], ['number']]
in rule  ['(', 'E', ')']  with  0
in symbol ( 		(in rule  ['(', 'E', ')'] )
matched True
else 0 (
3. unmatched ( 0
in symbol E 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in symbol ) 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in rule  ['identifier']  with  0
in symbol identifier 		(in rule  ['identifier'] )
matched True
is token
in match token 0 number identifier
SYMBOL IN RULE identifier ['identifier'] identifier True
temp store 0 ;
matched True
1. unmatched G ; ; ['G']
in symbol T' 		(in rule  ['F', "T'"] )
matched True
in producer
in match rule with  T' : [['*', 'F', "T'"], ['/', 'F', "T'"]]
in rule  ['*', 'F', "T'"]  with  ;
in symbol * 		(in rule  ['*', 'F', "T'"] )
matched True
else ; *
3. unmatched * ;
in symbol F 		(in rule  ['*', 'F', "T'"] )
unmatched exiting False
in symbol T' 		(in rule  ['*', 'F', "T'"] )
unmatched exiting False
in rule  ['/', 'F', "T'"]  with  ;
in symbol / 		(in rule  ['/', 'F', "T'"] )
matched True
else ; /
3. unmatched / ;
in symbol F 		(in rule  ['/', 'F', "T'"] )
unmatched exiting False
in symbol T' 		(in rule  ['/', 'F', "T'"] )
unmatched exiting False
1. unmatched T' ; ; ['F', "T'"]
in rule  ['F']  with  0
in symbol F 		(in rule  ['F'] )
matched True
in producer
in match rule with  F : [['G', '^', 'F'], ['G']]
in rule  ['G', '^', 'F']  with  0
in symbol G 		(in rule  ['G', '^', 'F'] )
matched True
in producer
in match rule with  G : [['(', 'E', ')'], ['identifier'], ['number']]
in rule  ['(', 'E', ')']  with  0
in symbol ( 		(in rule  ['(', 'E', ')'] )
matched True
else 0 (
3. unmatched ( 0
in symbol E 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in symbol ) 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in rule  ['identifier']  with  0
in symbol identifier 		(in rule  ['identifier'] )
matched True
is token
in match token 0 number identifier
SYMBOL IN RULE identifier ['identifier'] identifier True
temp store 0 ;
matched True
1. unmatched G ; ; ['G', '^', 'F']
in symbol ^ 		(in rule  ['G', '^', 'F'] )
unmatched exiting False
in symbol F 		(in rule  ['G', '^', 'F'] )
unmatched exiting False
in rule  ['G']  with  0
in symbol G 		(in rule  ['G'] )
matched True
in producer
in match rule with  G : [['(', 'E', ')'], ['identifier'], ['number']]
in rule  ['(', 'E', ')']  with  0
in symbol ( 		(in rule  ['(', 'E', ')'] )
matched True
else 0 (
3. unmatched ( 0
in symbol E 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in symbol ) 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in rule  ['identifier']  with  0
in symbol identifier 		(in rule  ['identifier'] )
matched True
is token
in match token 0 number identifier
SYMBOL IN RULE identifier ['identifier'] identifier True
temp store 0 ;
matched True
1. unmatched G ; ; ['G']
1. unmatched T ; ; ['T', "E'"]
in symbol E' 		(in rule  ['T', "E'"] )
unmatched exiting False
in rule  ['T']  with  0
in symbol T 		(in rule  ['T'] )
matched True
in producer
in match rule with  T : [['F', "T'"], ['F']]
in rule  ['F', "T'"]  with  0
in symbol F 		(in rule  ['F', "T'"] )
matched True
in producer
in match rule with  F : [['G', '^', 'F'], ['G']]
in rule  ['G', '^', 'F']  with  0
in symbol G 		(in rule  ['G', '^', 'F'] )
matched True
in producer
in match rule with  G : [['(', 'E', ')'], ['identifier'], ['number']]
in rule  ['(', 'E', ')']  with  0
in symbol ( 		(in rule  ['(', 'E', ')'] )
matched True
else 0 (
3. unmatched ( 0
in symbol E 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in symbol ) 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in rule  ['identifier']  with  0
in symbol identifier 		(in rule  ['identifier'] )
matched True
is token
in match token 0 number identifier
SYMBOL IN RULE identifier ['identifier'] identifier True
temp store 0 ;
matched True
1. unmatched G ; ; ['G', '^', 'F']
in symbol ^ 		(in rule  ['G', '^', 'F'] )
unmatched exiting False
in symbol F 		(in rule  ['G', '^', 'F'] )
unmatched exiting False
in rule  ['G']  with  0
in symbol G 		(in rule  ['G'] )
matched True
in producer
in match rule with  G : [['(', 'E', ')'], ['identifier'], ['number']]
in rule  ['(', 'E', ')']  with  0
in symbol ( 		(in rule  ['(', 'E', ')'] )
matched True
else 0 (
3. unmatched ( 0
in symbol E 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in symbol ) 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in rule  ['identifier']  with  0
in symbol identifier 		(in rule  ['identifier'] )
matched True
is token
in match token 0 number identifier
SYMBOL IN RULE identifier ['identifier'] identifier True
temp store 0 ;
matched True
1. unmatched G ; ; ['G']
in symbol T' 		(in rule  ['F', "T'"] )
matched True
in producer
in match rule with  T' : [['*', 'F', "T'"], ['/', 'F', "T'"]]
in rule  ['*', 'F', "T'"]  with  ;
in symbol * 		(in rule  ['*', 'F', "T'"] )
matched True
else ; *
3. unmatched * ;
in symbol F 		(in rule  ['*', 'F', "T'"] )
unmatched exiting False
in symbol T' 		(in rule  ['*', 'F', "T'"] )
unmatched exiting False
in rule  ['/', 'F', "T'"]  with  ;
in symbol / 		(in rule  ['/', 'F', "T'"] )
matched True
else ; /
3. unmatched / ;
in symbol F 		(in rule  ['/', 'F', "T'"] )
unmatched exiting False
in symbol T' 		(in rule  ['/', 'F', "T'"] )
unmatched exiting False
1. unmatched T' ; ; ['F', "T'"]
in rule  ['F']  with  0
in symbol F 		(in rule  ['F'] )
matched True
in producer
in match rule with  F : [['G', '^', 'F'], ['G']]
in rule  ['G', '^', 'F']  with  0
in symbol G 		(in rule  ['G', '^', 'F'] )
matched True
in producer
in match rule with  G : [['(', 'E', ')'], ['identifier'], ['number']]
in rule  ['(', 'E', ')']  with  0
in symbol ( 		(in rule  ['(', 'E', ')'] )
matched True
else 0 (
3. unmatched ( 0
in symbol E 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in symbol ) 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in rule  ['identifier']  with  0
in symbol identifier 		(in rule  ['identifier'] )
matched True
is token
in match token 0 number identifier
SYMBOL IN RULE identifier ['identifier'] identifier True
temp store 0 ;
matched True
1. unmatched G ; ; ['G', '^', 'F']
in symbol ^ 		(in rule  ['G', '^', 'F'] )
unmatched exiting False
in symbol F 		(in rule  ['G', '^', 'F'] )
unmatched exiting False
in rule  ['G']  with  0
in symbol G 		(in rule  ['G'] )
matched True
in producer
in match rule with  G : [['(', 'E', ')'], ['identifier'], ['number']]
in rule  ['(', 'E', ')']  with  0
in symbol ( 		(in rule  ['(', 'E', ')'] )
matched True
else 0 (
3. unmatched ( 0
in symbol E 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in symbol ) 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in rule  ['identifier']  with  0
in symbol identifier 		(in rule  ['identifier'] )
matched True
is token
in match token 0 number identifier
SYMBOL IN RULE identifier ['identifier'] identifier True
temp store 0 ;
matched True
1. unmatched G ; ; ['G']
1. unmatched T ; ; ['T']
1. unmatched EXPRESSION ; ; ['identifier', '=', 'EXPRESSION', ';']
in symbol ; 		(in rule  ['identifier', '=', 'EXPRESSION', ';'] )
unmatched exiting False
in symbol ; 		(in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}'] )
matched True
else ; ;
in symbol COND 		(in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}'] )
matched True
in producer
in match rule with  COND : [['EXPRESSION', 'relational_operator', 'EXPRESSION', ';']]
in rule  ['EXPRESSION', 'relational_operator', 'EXPRESSION', ';']  with  i
in symbol EXPRESSION 		(in rule  ['EXPRESSION', 'relational_operator', 'EXPRESSION', ';'] )
matched True
in producer
in match rule with  EXPRESSION : [['E']]
in rule  ['E']  with  i
in symbol E 		(in rule  ['E'] )
matched True
in producer
in match rule with  E : [['T', "E'"], ['T']]
in rule  ['T', "E'"]  with  i
in symbol T 		(in rule  ['T', "E'"] )
matched True
in producer
in match rule with  T : [['F', "T'"], ['F']]
in rule  ['F', "T'"]  with  i
in symbol F 		(in rule  ['F', "T'"] )
matched True
in producer
in match rule with  F : [['G', '^', 'F'], ['G']]
in rule  ['G', '^', 'F']  with  i
in symbol G 		(in rule  ['G', '^', 'F'] )
matched True
in producer
in match rule with  G : [['(', 'E', ')'], ['identifier'], ['number']]
in rule  ['(', 'E', ')']  with  i
in symbol ( 		(in rule  ['(', 'E', ')'] )
matched True
else i (
3. unmatched ( i
in symbol E 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in symbol ) 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in rule  ['identifier']  with  i
in symbol identifier 		(in rule  ['identifier'] )
matched True
is token
in match token i identifier identifier
SYMBOL IN RULE identifier ['identifier'] identifier True
temp store i <
matched True
1. unmatched G < < ['G', '^', 'F']
in symbol ^ 		(in rule  ['G', '^', 'F'] )
unmatched exiting False
in symbol F 		(in rule  ['G', '^', 'F'] )
unmatched exiting False
in rule  ['G']  with  i
in symbol G 		(in rule  ['G'] )
matched True
in producer
in match rule with  G : [['(', 'E', ')'], ['identifier'], ['number']]
in rule  ['(', 'E', ')']  with  i
in symbol ( 		(in rule  ['(', 'E', ')'] )
matched True
else i (
3. unmatched ( i
in symbol E 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in symbol ) 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in rule  ['identifier']  with  i
in symbol identifier 		(in rule  ['identifier'] )
matched True
is token
in match token i identifier identifier
SYMBOL IN RULE identifier ['identifier'] identifier True
temp store i <
matched True
1. unmatched G < < ['G']
in symbol T' 		(in rule  ['F', "T'"] )
matched True
in producer
in match rule with  T' : [['*', 'F', "T'"], ['/', 'F', "T'"]]
in rule  ['*', 'F', "T'"]  with  <
in symbol * 		(in rule  ['*', 'F', "T'"] )
matched True
else < *
3. unmatched * <
in symbol F 		(in rule  ['*', 'F', "T'"] )
unmatched exiting False
in symbol T' 		(in rule  ['*', 'F', "T'"] )
unmatched exiting False
in rule  ['/', 'F', "T'"]  with  <
in symbol / 		(in rule  ['/', 'F', "T'"] )
matched True
else < /
3. unmatched / <
in symbol F 		(in rule  ['/', 'F', "T'"] )
unmatched exiting False
in symbol T' 		(in rule  ['/', 'F', "T'"] )
unmatched exiting False
1. unmatched T' < < ['F', "T'"]
in rule  ['F']  with  i
in symbol F 		(in rule  ['F'] )
matched True
in producer
in match rule with  F : [['G', '^', 'F'], ['G']]
in rule  ['G', '^', 'F']  with  i
in symbol G 		(in rule  ['G', '^', 'F'] )
matched True
in producer
in match rule with  G : [['(', 'E', ')'], ['identifier'], ['number']]
in rule  ['(', 'E', ')']  with  i
in symbol ( 		(in rule  ['(', 'E', ')'] )
matched True
else i (
3. unmatched ( i
in symbol E 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in symbol ) 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in rule  ['identifier']  with  i
in symbol identifier 		(in rule  ['identifier'] )
matched True
is token
in match token i identifier identifier
SYMBOL IN RULE identifier ['identifier'] identifier True
temp store i <
matched True
1. unmatched G < < ['G', '^', 'F']
in symbol ^ 		(in rule  ['G', '^', 'F'] )
unmatched exiting False
in symbol F 		(in rule  ['G', '^', 'F'] )
unmatched exiting False
in rule  ['G']  with  i
in symbol G 		(in rule  ['G'] )
matched True
in producer
in match rule with  G : [['(', 'E', ')'], ['identifier'], ['number']]
in rule  ['(', 'E', ')']  with  i
in symbol ( 		(in rule  ['(', 'E', ')'] )
matched True
else i (
3. unmatched ( i
in symbol E 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in symbol ) 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in rule  ['identifier']  with  i
in symbol identifier 		(in rule  ['identifier'] )
matched True
is token
in match token i identifier identifier
SYMBOL IN RULE identifier ['identifier'] identifier True
temp store i <
matched True
1. unmatched G < < ['G']
1. unmatched T < < ['T', "E'"]
in symbol E' 		(in rule  ['T', "E'"] )
unmatched exiting False
in rule  ['T']  with  i
in symbol T 		(in rule  ['T'] )
matched True
in producer
in match rule with  T : [['F', "T'"], ['F']]
in rule  ['F', "T'"]  with  i
in symbol F 		(in rule  ['F', "T'"] )
matched True
in producer
in match rule with  F : [['G', '^', 'F'], ['G']]
in rule  ['G', '^', 'F']  with  i
in symbol G 		(in rule  ['G', '^', 'F'] )
matched True
in producer
in match rule with  G : [['(', 'E', ')'], ['identifier'], ['number']]
in rule  ['(', 'E', ')']  with  i
in symbol ( 		(in rule  ['(', 'E', ')'] )
matched True
else i (
3. unmatched ( i
in symbol E 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in symbol ) 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in rule  ['identifier']  with  i
in symbol identifier 		(in rule  ['identifier'] )
matched True
is token
in match token i identifier identifier
SYMBOL IN RULE identifier ['identifier'] identifier True
temp store i <
matched True
1. unmatched G < < ['G', '^', 'F']
in symbol ^ 		(in rule  ['G', '^', 'F'] )
unmatched exiting False
in symbol F 		(in rule  ['G', '^', 'F'] )
unmatched exiting False
in rule  ['G']  with  i
in symbol G 		(in rule  ['G'] )
matched True
in producer
in match rule with  G : [['(', 'E', ')'], ['identifier'], ['number']]
in rule  ['(', 'E', ')']  with  i
in symbol ( 		(in rule  ['(', 'E', ')'] )
matched True
else i (
3. unmatched ( i
in symbol E 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in symbol ) 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in rule  ['identifier']  with  i
in symbol identifier 		(in rule  ['identifier'] )
matched True
is token
in match token i identifier identifier
SYMBOL IN RULE identifier ['identifier'] identifier True
temp store i <
matched True
1. unmatched G < < ['G']
in symbol T' 		(in rule  ['F', "T'"] )
matched True
in producer
in match rule with  T' : [['*', 'F', "T'"], ['/', 'F', "T'"]]
in rule  ['*', 'F', "T'"]  with  <
in symbol * 		(in rule  ['*', 'F', "T'"] )
matched True
else < *
3. unmatched * <
in symbol F 		(in rule  ['*', 'F', "T'"] )
unmatched exiting False
in symbol T' 		(in rule  ['*', 'F', "T'"] )
unmatched exiting False
in rule  ['/', 'F', "T'"]  with  <
in symbol / 		(in rule  ['/', 'F', "T'"] )
matched True
else < /
3. unmatched / <
in symbol F 		(in rule  ['/', 'F', "T'"] )
unmatched exiting False
in symbol T' 		(in rule  ['/', 'F', "T'"] )
unmatched exiting False
1. unmatched T' < < ['F', "T'"]
in rule  ['F']  with  i
in symbol F 		(in rule  ['F'] )
matched True
in producer
in match rule with  F : [['G', '^', 'F'], ['G']]
in rule  ['G', '^', 'F']  with  i
in symbol G 		(in rule  ['G', '^', 'F'] )
matched True
in producer
in match rule with  G : [['(', 'E', ')'], ['identifier'], ['number']]
in rule  ['(', 'E', ')']  with  i
in symbol ( 		(in rule  ['(', 'E', ')'] )
matched True
else i (
3. unmatched ( i
in symbol E 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in symbol ) 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in rule  ['identifier']  with  i
in symbol identifier 		(in rule  ['identifier'] )
matched True
is token
in match token i identifier identifier
SYMBOL IN RULE identifier ['identifier'] identifier True
temp store i <
matched True
1. unmatched G < < ['G', '^', 'F']
in symbol ^ 		(in rule  ['G', '^', 'F'] )
unmatched exiting False
in symbol F 		(in rule  ['G', '^', 'F'] )
unmatched exiting False
in rule  ['G']  with  i
in symbol G 		(in rule  ['G'] )
matched True
in producer
in match rule with  G : [['(', 'E', ')'], ['identifier'], ['number']]
in rule  ['(', 'E', ')']  with  i
in symbol ( 		(in rule  ['(', 'E', ')'] )
matched True
else i (
3. unmatched ( i
in symbol E 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in symbol ) 		(in rule  ['(', 'E', ')'] )
unmatched exiting False
in rule  ['identifier']  with  i
in symbol identifier 		(in rule  ['identifier'] )
matched True
is token
in match token i identifier identifier
SYMBOL IN RULE identifier ['identifier'] identifier True
temp store i <
matched True
1. unmatched G < < ['G']
1. unmatched T < < ['T']
1. unmatched EXPRESSION < < ['EXPRESSION', 'relational_operator', 'EXPRESSION', ';']
in symbol relational_operator 		(in rule  ['EXPRESSION', 'relational_operator', 'EXPRESSION', ';'] )
unmatched exiting False
in symbol EXPRESSION 		(in rule  ['EXPRESSION', 'relational_operator', 'EXPRESSION', ';'] )
unmatched exiting False
in symbol ; 		(in rule  ['EXPRESSION', 'relational_operator', 'EXPRESSION', ';'] )
unmatched exiting False
in symbol ; 		(in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}'] )
matched True
else < ;
3. unmatched ; for
in symbol S) 		(in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}'] )
unmatched exiting False
in symbol { 		(in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}'] )
unmatched exiting False
in symbol S 		(in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}'] )
unmatched exiting False
in symbol } 		(in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}'] )
unmatched exiting False
in symbol ST 		(in rule  ['FOR_LOOP', 'ST'] )
matched True
in producer
in match rule with  ST : [['STATEMENT_ST']]
in rule  ['STATEMENT_ST']  with  <
in symbol STATEMENT_ST 		(in rule  ['STATEMENT_ST'] )
matched True
in producer
in match rule with  STATEMENT_ST : [['STATEMENT', 'ST']]
in rule  ['STATEMENT', 'ST']  with  <
in symbol STATEMENT 		(in rule  ['STATEMENT', 'ST'] )
matched True
in producer
in match rule with  STATEMENT : [['FOR_LOOP_ST'], ['IF_COND_ST'], ['ASSIGN_ST'], ['DECL_ST']]
in rule  ['FOR_LOOP_ST']  with  <
in symbol FOR_LOOP_ST 		(in rule  ['FOR_LOOP_ST'] )
matched True
in producer
in match rule with  FOR_LOOP_ST : [['FOR_LOOP', 'ST']]
in rule  ['FOR_LOOP', 'ST']  with  <
in symbol FOR_LOOP 		(in rule  ['FOR_LOOP', 'ST'] )
matched True
in producer
in match rule with  FOR_LOOP : [['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}']]
in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}']  with  <
in symbol for 		(in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}'] )
matched True
else < for
3. unmatched for <
in symbol ( 		(in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}'] )
unmatched exiting False
in symbol ASSIGN 		(in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}'] )
unmatched exiting False
in symbol ; 		(in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}'] )
unmatched exiting False
in symbol COND 		(in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}'] )
unmatched exiting False
in symbol ; 		(in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}'] )
unmatched exiting False
in symbol S) 		(in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}'] )
unmatched exiting False
in symbol { 		(in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}'] )
unmatched exiting False
in symbol S 		(in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}'] )
unmatched exiting False
in symbol } 		(in rule  ['for', '(', 'ASSIGN', ';', 'COND', ';', 'S)', '{', 'S', '}'] )
unmatched exiting False
1. unmatched FOR_LOOP < < ['FOR_LOOP', 'ST']
in symbol ST 		(in rule  ['FOR_LOOP', 'ST'] )
unmatched exiting False
1. unmatched FOR_LOOP_ST < < ['FOR_LOOP_ST']
in rule  ['IF_COND_ST']  with  <
in symbol IF_COND_ST 		(in rule  ['IF_COND_ST'] )
matched True
in producer
in match rule with  IF_COND_ST : [['IF_COND', 'ST']]
in rule  ['IF_COND', 'ST']  with  <
in symbol IF_COND 		(in rule  ['IF_COND', 'ST'] )
matched True
in producer
in match rule with  IF_COND : [['if', '(', 'COND', ')', '{', 'S', '}', 'OP_ELSE'], ['if', '(', 'COND', ')', '{', 'S', '}']]
in rule  ['if', '(', 'COND', ')', '{', 'S', '}', 'OP_ELSE']  with  <
in symbol if 		(in rule  ['if', '(', 'COND', ')', '{', 'S', '}', 'OP_ELSE'] )
matched True
else < if
3. unmatched if <
in symbol ( 		(in rule  ['if', '(', 'COND', ')', '{', 'S', '}', 'OP_ELSE'] )
unmatched exiting False
in symbol COND 		(in rule  ['if', '(', 'COND', ')', '{', 'S', '}', 'OP_ELSE'] )
unmatched exiting False
in symbol ) 		(in rule  ['if', '(', 'COND', ')', '{', 'S', '}', 'OP_ELSE'] )
unmatched exiting False
in symbol { 		(in rule  ['if', '(', 'COND', ')', '{', 'S', '}', 'OP_ELSE'] )
unmatched exiting False
in symbol S 		(in rule  ['if', '(', 'COND', ')', '{', 'S', '}', 'OP_ELSE'] )
unmatched exiting False
in symbol } 		(in rule  ['if', '(', 'COND', ')', '{', 'S', '}', 'OP_ELSE'] )
unmatched exiting False
in symbol OP_ELSE 		(in rule  ['if', '(', 'COND', ')', '{', 'S', '}', 'OP_ELSE'] )
unmatched exiting False
in rule  ['if', '(', 'COND', ')', '{', 'S', '}']  with  <
in symbol if 		(in rule  ['if', '(', 'COND', ')', '{', 'S', '}'] )
matched True
else < if
3. unmatched if <
in symbol ( 		(in rule  ['if', '(', 'COND', ')', '{', 'S', '}'] )
unmatched exiting False
in symbol COND 		(in rule  ['if', '(', 'COND', ')', '{', 'S', '}'] )
unmatched exiting False
in symbol ) 		(in rule  ['if', '(', 'COND', ')', '{', 'S', '}'] )
unmatched exiting False
in symbol { 		(in rule  ['if', '(', 'COND', ')', '{', 'S', '}'] )
unmatched exiting False
in symbol S 		(in rule  ['if', '(', 'COND', ')', '{', 'S', '}'] )
unmatched exiting False
in symbol } 		(in rule  ['if', '(', 'COND', ')', '{', 'S', '}'] )
unmatched exiting False
1. unmatched IF_COND < < ['IF_COND', 'ST']
in symbol ST 		(in rule  ['IF_COND', 'ST'] )
unmatched exiting False
1. unmatched IF_COND_ST < < ['IF_COND_ST']
in rule  ['ASSIGN_ST']  with  <
in symbol ASSIGN_ST 		(in rule  ['ASSIGN_ST'] )
matched True
in producer
in match rule with  ASSIGN_ST : [['ASSIGN', 'ST']]
in rule  ['ASSIGN', 'ST']  with  <
in symbol ASSIGN 		(in rule  ['ASSIGN', 'ST'] )
matched True
in producer
in match rule with  ASSIGN : [['identifier', '=', 'EXPRESSION', ';']]
in rule  ['identifier', '=', 'EXPRESSION', ';']  with  <
in symbol identifier 		(in rule  ['identifier', '=', 'EXPRESSION', ';'] )
matched True
is token
in match token < relational_operator identifier
2. unmatched identifier <
in symbol = 		(in rule  ['identifier', '=', 'EXPRESSION', ';'] )
unmatched exiting False
in symbol EXPRESSION 		(in rule  ['identifier', '=', 'EXPRESSION', ';'] )
unmatched exiting False
in symbol ; 		(in rule  ['identifier', '=', 'EXPRESSION', ';'] )
unmatched exiting False
1. unmatched ASSIGN < < ['ASSIGN', 'ST']
in symbol ST 		(in rule  ['ASSIGN', 'ST'] )
unmatched exiting False
1. unmatched ASSIGN_ST < < ['ASSIGN_ST']
in rule  ['DECL_ST']  with  <
in symbol DECL_ST 		(in rule  ['DECL_ST'] )
matched True
in producer
in match rule with  DECL_ST : [['DECL', 'ST'], ['DECL']]
in rule  ['DECL', 'ST']  with  <
in symbol DECL 		(in rule  ['DECL', 'ST'] )
matched True
in producer
in match rule with  DECL : [['type', 'identifier', ';']]
in rule  ['type', 'identifier', ';']  with  <
in symbol type 		(in rule  ['type', 'identifier', ';'] )
matched True
is token
in match token < relational_operator type
2. unmatched type <
in symbol identifier 		(in rule  ['type', 'identifier', ';'] )
unmatched exiting False
in symbol ; 		(in rule  ['type', 'identifier', ';'] )
unmatched exiting False
1. unmatched DECL < < ['DECL', 'ST']
in symbol ST 		(in rule  ['DECL', 'ST'] )
unmatched exiting False
in rule  ['DECL']  with  <
in symbol DECL 		(in rule  ['DECL'] )
matched True
in producer
in match rule with  DECL : [['type', 'identifier', ';']]
in rule  ['type', 'identifier', ';']  with  <
in symbol type 		(in rule  ['type', 'identifier', ';'] )
matched True
is token
in match token < relational_operator type
2. unmatched type <
in symbol identifier 		(in rule  ['type', 'identifier', ';'] )
unmatched exiting False
in symbol ; 		(in rule  ['type', 'identifier', ';'] )
unmatched exiting False
1. unmatched DECL < < ['DECL']
1. unmatched DECL_ST < < ['DECL_ST']
1. unmatched STATEMENT < < ['STATEMENT', 'ST']
in symbol ST 		(in rule  ['STATEMENT', 'ST'] )
unmatched exiting False
1. unmatched STATEMENT_ST < < ['STATEMENT_ST']
1. unmatched ST < < ['FOR_LOOP', 'ST']
1. unmatched STATEMENT < < ['STATEMENT']
DONE < relational_operator
